- hosts: all
  vars:
    provisioning_user: root
    provisioning_group: root
    provisioning_user_home_dir: /root
  become: yes
  # pre_tasks:
  #   # https://github.com/elreydetoda/vagrant-files/issues/7
  #   - name: configuring folder
  #     file:
  #       path: '{{ item }}'
  #       owner: vagrant
  #       group: vagrant
  #       mode: '755'
  #       recurse: yes
  #       state: directory
  #     loop:
  #       - ~vagrant/tools/
  #       - /client_data/
  tasks:

  - name: installing all packages
    block:

      # commenting out because: https://github.com/elreydetoda/packer-kali_linux/issues/44
      # - name: remove docker to use docker snap later
      #   apt:
      #     state: absent
      #     name:
      #       - docker-ce

      - name: installing apt packages
        apt:
          state: present
          name:
            - vim-gtk3
            - glances
            - jq
            - snapd
            - xclip
            - python3-pip
            - python3-venv
            - eyewitness

      - name: installing python tools
        pip:
          state: present
          name:
            - pipenv
            - pipx # based on @byt3bl33d3r's recommendation: https://youtu.be/ieyRV9zQd2U

      - name: cleaning up kali
        apt:
          autoremove: yes

      - name: installing normal snap packages
        snap:
          name:
            # commenting out because: https://github.com/elreydetoda/packer-kali_linux/issues/44
            # - docker
            - postman

      - name: installing classic snap packages
        snap:
          classic: yes
          name:
            - go
            - code
            - kubectl
            - google-cloud-sdk

  - name: adding docker deps
    block:

      - name: adding docker group
        group:
          system: yes
          name: docker

      - name: adding provisioning user to docker group
        user:
          name: '{{ ansible_user_id }}'
          groups: docker
          append: yes

  - name: configuring other customizations
    block:

      - name: setting up tools
        block:

          - name: check if msfdb has been initialized
            stat:
              path: /usr/share/metasploit-framework/config/database.yml
            register: msfdb_result

          - name: initializing metasploit framework
            command: msfdb init
            when: not msfdb_result.stat.exists

          - name: update nmap script db
            command: nmap --script-updatedb
            # till I figure out where this writes to
            changed_when: False

          - name: update recon-ng marketplace
            command: recon-ng -r /vagrant/tools/recon-ng/update-install_marketplace.rf
            # become: yes
            # become_method: su
            # become_user: '{{ ansible_user_id }}'
            args:
              creates: '{{ provisioning_user_home_dir }}/.recon-ng/modules.yml'

          - name: enabling and starting other services
            systemd:
              enabled: yes
              state: started
              name: "{{ item }}"
            loop:
              - postgresql
              # - snap.docker.dockerd.service

          - name: setting vim as editor
            alternatives:
              name: editor
              path: /usr/bin/vim.gtk3

      - name: configuring home settings
        vars:
          shells:
              - zsh
              - bash
          customizations_dir: '{{ provisioning_user_home_dir }}/.{{ item }}.d'
        block:

          - name: creating .d folders for bash & zsh for extra stuff
            file:
              path: '{{ customizations_dir }}'
              state: directory
              mode: 0644
              owner: '{{ provisioning_user }}'
              group: '{{ provisioning_group }}'
            loop: '{{ shells }}'

          - name: telling shells to source new folder
            lineinfile:
              path: '{{ provisioning_user_home_dir }}/.{{ item }}rc'
              regexp: '^source ~/.{{ item }}.d/\*$'
              line: 'source ~/.{{ item }}.d/*'
              owner: '{{ provisioning_user }}'
              group: '{{ provisioning_group }}'
            loop: '{{ shells }}'

          - name: configuring bash settings
            block:

              - name: copy custom PS1 prompt
                copy:
                  src: './{{ item }}_prompt'
                  dest: '{{ customizations_dir }}/{{ item }}_prompt'
                  owner: '{{ provisioning_user }}'
                  group: '{{ provisioning_group }}'
                  mode: 0644
                loop: '{{ shells }}'

              - name: removing kali prompt
                copy:
                  dest: '{{ provisioning_user_home_dir }}/.hushlogin'
                  owner: '{{ provisioning_user }}'
                  group: '{{ provisioning_group }}'
                  mode: 0644
                  content: ""

              - name: set vi mode for bash but Ctrl + l
                copy:
                  dest: '{{ provisioning_user_home_dir }}/.inputrc'
                  owner: '{{ provisioning_user }}'
                  group: '{{ provisioning_group }}'
                  mode: 0644
                  content: |
                    set editing-mode vi
                    $if mode=vi

                    set keymap vi-command
                    # these are for vi-command mode
                    Control-l: clear-screen

                    set keymap vi-insert
                    # these are for vi-insert mode
                    Control-l: clear-screen
                    $endif

          # no longer getting used by default
          # - name: adding extra bash stuff
          #   block:
                

          - name: adding extra zsh stuff
            block:
                
              - name: adding aliases
                lineinfile:
                  path: '/home/vagrant/.zshrc'
                  regexp: '{{ item.regexp }}'
                  line: '{{ item.line }}'
                  owner: vagrant
                  group: vagrant
                loop:
                  - {
                      regexp: '^alias auto-root-x11="xauth list',
                      line: "alias auto-root-x11=\"xauth list | awk '{print \\$3}' | xargs -I {} sudo xauth add \"${DISPLAY}\" . {}\"",
                    }
                  - {
                      regexp: '^alias auto-rootz="sudo --preserve-env',
                      line: 'alias auto-rootz="sudo --preserve-env=DISPLAY -i"',
                    }
