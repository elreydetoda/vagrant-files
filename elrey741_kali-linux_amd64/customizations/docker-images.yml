- hosts: all
  become: yes
  tasks:

    - name: prep for pulling docker images
      vars:
        pipenv_file_dir: '/vagrant/customizations'
      block:

        - name: installing pipenv
          pip:
            name: pipenv
            executable: pip3

        - name: installing python deps with pipenv
          # modified from: https://github.com/pypa/pipenv/issues/363#issuecomment-420936475
          command: 'pipenv install --deploy --system --skip-lock'
          args:
            chdir: '{{ pipenv_file_dir }}'
          changed_when: False


    - name: pulling docker images
      vars:
        containers:
          - name: elrey741
            excluded_images:
              - pipenv
              - python
              - ansible
              - jython
          - name: gh0s7
            excluded_images:
              -
          - name: frohoff
            excluded_images:
              - '!ysoserial'
        docker_search_script: |
          function docker_search(){
            docker_image_owner="${1}"
            dio="${docker_image_owner}"
            docker_cmd='{{ docker_cmd_path }}'
            set -x
            if [[ "${2}" == "None" ]] ; then
               ${docker_cmd} search --format '{{ '{{' }} .Name {{ '}}' }}' "${dio}" | grep "^${dio}/"
            elif grep '!' <<< "${2}" > /dev/null ; then
               ${docker_cmd} search --format '{{ '{{' }} .Name {{ '}}' }}' "${dio}" | grep "^${dio}/" | grep "${2#*!}"
            else
               ${docker_cmd} search --format '{{ '{{' }} .Name {{ '}}' }}' "${dio}" | grep "^${dio}/" | grep -vE "${2}"
            fi
          }
          (
            docker_search '{{ item.name }}' "{{ item.excluded_images | join('|') | default('None') }}"
          )
        docker_cmd_path: '/snap/bin/docker'
      block:

        # - debug:
        #     msg: "container name: {{ item.name }} with excluded_images: {{ item.excluded_images | join('|') | default() }}"
        #   #   var: item
        #   loop: '{{ containers }}'

        - name: handling docker pathing....
          block:
            - name: adding images wanted to register
              args:
                executable: /bin/bash
              # specify the parenthesis in the bash shell so that all output is directed together from all commands
              #   so, all images are outputed to stdout_lines
              # weird curely braces is because of this:
              #   https://stackoverflow.com/questions/32279519/escaping-double-curly-braces-in-ansible#answer-32283447
              shell: '{{ docker_search_script }}'
              register: docker_images
              changed_when: False
              loop: '{{ containers }}'

          rescue:

            - name: adding images wanted to register
              args:
                executable: /bin/bash
              # specify the parenthesis in the bash shell so that all output is directed together from all commands
              #   so, all images are outputed to stdout_lines
              # weird curely braces is because of this:
              #   https://stackoverflow.com/questions/32279519/escaping-double-curly-braces-in-ansible#answer-32283447
              shell: '{{ docker_search_script }}'
              vars:
                docker_cmd_path: 'docker'
              register: docker_images
              changed_when: False
              loop: '{{ containers }}'

        # - debug:
        #     msg: '{{ item }}'
        #   loop: "{{ docker_images.results | map(attribute='stdout_lines') | list |flatten }}"

        - name: pulling all images
          docker_image:
            name: '{{ item }}'
            source: pull
          # modified from: https://groups.google.com/g/ansible-project/c/QUugEQRZT-g/m/bYOjM_k3BQAJ
          loop: "{{ docker_images.results | map(attribute='stdout_lines') | list |flatten }}"
